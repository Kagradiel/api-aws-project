name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Define ECR repository and image name
        id: ecr-details
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: minha-api
          IMAGE_TAG: latest
        run: |
          echo "ecr_repository_uri=${ECR_REGISTRY}/${ECR_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "image_name=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_OUTPUT
          

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.ecr-details.outputs.image_name }}


      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ steps.ecr-details.outputs.image_name }}
            docker stop api-container || true
            docker rm api-container || true
            docker run -d \
              -p 8080:3000 \
              --name api-container \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_NAME="${{ secrets.DB_NAME }}" \
              ${{ steps.ecr-details.outputs.image_name }}